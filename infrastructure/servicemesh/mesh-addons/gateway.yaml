# apiVersion: helm.toolkit.fluxcd.io/v2beta1
# kind: HelmRelease
# metadata:
#   name: appmesh-gateway
#   namespace: appmesh-gateway
# spec:
#   releaseName: appmesh-gateway
#   chart:
#     spec:
#       chart: appmesh-gateway
#       sourceRef:
#         kind: HelmRepository
#         name: eks
#         namespace: flux-system
#   interval: 5m
#   install:
#     remediation:
#       retries: -1
#   upgrade:
#     remediation:
#       retries: 3
#   values:
#     appmesh:
#       gateway: true

apiVersion: v1
kind: Service
metadata:
  name: ingress-gw
  namespace: appmesh-gateway
  annotations:
    # service.beta.kubernetes.io/aws-load-balancer-name: "ingress-external-lb"
    # service.beta.kubernetes.io/aws-load-balancer-type: nlb-ip
    # service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 8088
      name: http
  selector:
    app: ingress-gw

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ingress-gw
  namespace: appmesh-gateway
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ingress-gw
  template:
    metadata:
      labels:
        app: ingress-gw
    spec:
      containers:
        - name: envoy
          image: 840364872350.dkr.ecr.us-west-2.amazonaws.com/aws-appmesh-envoy:v1.16.1.1-prod
          ports:
            - containerPort: 8088
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualGateway
metadata:
  name: ingress-gw
  namespace: appmesh-gateway
spec:
  namespaceSelector:
    matchLabels:
      gateway: ingress-gw
  podSelector:
    matchLabels:
      app: ingress-gw
  listeners:
    - portMapping:
        port: 8088
        protocol: http
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: GatewayRoute
metadata:
  name: gateway-route-eks
  namespace: appmesh-gateway
spec:
  httpRoute:
    match:
      prefix: "/nginx/"
    action:
      target:
        virtualService:
          virtualServiceRef:
            name: nginx
